warning Struct fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:58:16] field_ordering

 58 |     c: struct { x: u32, y: u32, w: u32, h: u32 },
    |                ^^^^^^^^^^^^^^^^

warning Struct fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:48:29] field_ordering

 48 | const MixedStruct = struct {
    |                             
 49 |     a: []const u8,
    | ^^^^^^^^^^^^^^^^^^
 50 |     c: struct { x: u32, y: u32, w: u32, h: u32 },
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 51 |     b: struct { w: u32, h: u32 },
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 52 |     d: u32,
    | ^^^^^^^^^^^

warning Struct fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:50:16] field_ordering

 50 |     c: struct { x: u32, y: u32, w: u32, h: u32 },
    |                ^^^^^^^^^^^^^^^^

warning Struct fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:45:32] field_ordering

 45 | const StructOfOnLine = struct { a: u32, b: u32 };
    |                                ^^^^^^^^^^^^^^^

warning Union fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:44:31] field_ordering

 44 | const UnionOfOneLine = union { D: f32, C: u32, A: i32 };
    |                               ^^^^^^^^^^^^^^^^^^^^^^^

warning Enum fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:43:29] field_ordering

 43 | const EnumOfOneLine = enum { D, C, A };
    |                             ^^^^^^^^

warning Union fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:33:7] field_ordering

 33 |     },
    |       
 34 | 
    | ^
 35 |     /// my_union_c - With doc comments
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 36 |     /// on multiple lines
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
 37 |     my_union_c: f32,
    | ^^^^^^^^^^^^^^^^^^^^
 38 | 
    | ^
 39 |     my_union_b: u32,
    | ^^^^^^^^^^^^^^^^^^^^

warning Struct fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:28:25] field_ordering

 28 |     my_union_a: struct {
    |                         
 29 |         /// c - Nested fields
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 30 |         c: f32,
    | ^^^^^^^^^^^^^^^
 31 |         d: u32,
    | ^^^^^^^^^^^^^^^

warning Enum fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:18:22] field_ordering

 18 | const MyEnum = enum {
    |                      
 19 |     /// my_enum_d - Comment on single line
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 20 |     my_enum_d,
    | ^^^^^^^^^^^^^^
 21 |     my_enum_a,
    | ^^^^^^^^^^^^^^
 22 |     /// my_enum_c - Multiline line
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 23 |     /// comment for enum c
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
 24 |     my_enum_c,
    | ^^^^^^^^^^^^^^

warning Struct fields should be in alphabetical order [test_cases/field_ordering/field_ordering.input.zig:5:22] field_ordering

 5 |     field_d: u32 = 0,
   |                      
 6 | 
   | ^
 7 |     /// field_a - Field with comment
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 8 |     /// across multiple
   | ^^^^^^^^^^^^^^^^^^^^^^^
 9 |     /// lines
   | ^^^^^^^^^^^^^
 10 |     field_a: u32,
    | ^^^^^^^^^^^^^^^^^
 11 | 
    | ^
 12 |     /// field_c - field with single line comment
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 13 |     field_c: u32,
    | ^^^^^^^^^^^^^^^^^

x 10 warnings
